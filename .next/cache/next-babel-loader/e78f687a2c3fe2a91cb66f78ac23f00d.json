{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Calendar from 'react-calendar';\nimport Chart from \"chart.js\"; // import { API_URL } from '../../../root.js'\n\nimport axios from \"axios\";\nimport { IconContext } from \"react-icons\";\nimport Cookies from 'js-cookie';\nimport { MdViewQuilt } from \"react-icons/md\";\nimport { FaUsersCog, FaListAlt, FaUsers, FaMapMarkerAlt } from \"react-icons/fa\";\n\nvar moment = require('moment');\n\nvar Admin = /*#__PURE__*/function (_Component) {\n  _inherits(Admin, _Component);\n\n  var _super = _createSuper(Admin);\n\n  function Admin(props) {\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"chartRef\", /*#__PURE__*/React.createRef());\n\n    _this.state = {\n      first_name: '',\n      bookings: [],\n      users: []\n    };\n    return _this;\n  }\n\n  _createClass(Admin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var myChartRef = this.chartRef.current.getContext(\"2d\");\n      new Chart(myChartRef, {\n        type: \"line\",\n        data: {\n          //Bring in data\n          labels: [\"Jan\", \"Feb\", \"March\"],\n          datasets: [{\n            label: \"Bookings\",\n            data: [86, 67, 91]\n          }]\n        },\n        options: {//Customize chart options\n        }\n      }); // this.getApiData();\n    }\n  }, {\n    key: \"getApiData\",\n    value: function () {\n      var _getApiData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var token, id, role, config;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Cookies.get('token');\n\n              case 2:\n                token = _context3.sent;\n                // => 'value'\n                id = Cookies.get('id'); // => 'value'\n\n                role = Cookies.get('role');\n                config = {\n                  headers: {\n                    'Authorization': \"Bearer \" + token\n                  },\n                  timeout: 20000\n                };\n                _context3.next = 8;\n                return axios.get(API_URL + \"bookings\", config).then( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response) {\n                    var len, _loop, i;\n\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            console.log(response);\n\n                            if (response.data && response.data.length > 0) {\n                              console.log(\"response.data\");\n                              console.log(\"here\" + response.data);\n\n                              if (response.data.message == 'Token is not valid') {\n                                _this2.props.history.push(\"/\");\n                              }\n\n                              len = response.data.length;\n\n                              _this2.setState({\n                                bookings: []\n                              });\n\n                              _loop = function _loop(i) {\n                                var row = response.data[i];\n\n                                _this2.setState(function (prevState) {\n                                  return {\n                                    bookings: [].concat(_toConsumableArray(prevState.bookings), [row])\n                                  };\n                                });\n                              };\n\n                              for (i = 0; i < len; i++) {\n                                _loop(i);\n                              }\n                            }\n\n                            axios.get(API_URL + \"users/\" + _this2.props.id, config).then( /*#__PURE__*/function () {\n                              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n                                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                                  while (1) {\n                                    switch (_context.prev = _context.next) {\n                                      case 0:\n                                        console.log(response);\n\n                                        if (response.data.message == 'Token is not valid') {\n                                          _this2.props.history.push(\"/\");\n                                        }\n\n                                        _this2.setState({\n                                          first_name: response.data.first_name\n                                        });\n\n                                        _context.next = 5;\n                                        return axios.get(API_URL + \"users\", config).then(function (response) {\n                                          console.log(response);\n\n                                          if (response.data.message == 'Token is not valid') {\n                                            _this2.props.history.push(\"/\");\n                                          }\n\n                                          var len = response.data.length;\n\n                                          _this2.setState({\n                                            users: []\n                                          });\n\n                                          var _loop2 = function _loop2(_i) {\n                                            var row = response.data[_i];\n\n                                            _this2.setState(function (prevState) {\n                                              return {\n                                                users: [].concat(_toConsumableArray(prevState.users), [row])\n                                              };\n                                            });\n                                          };\n\n                                          for (var _i = 0; _i < len; _i++) {\n                                            _loop2(_i);\n                                          }\n                                        })[\"catch\"](function (error) {\n                                          //    this.setState({regLoader: false})\n                                          if (error.code == 'ECONNABORTED') {//     Toast.show('Connection TImeout')\n                                          } else if (error.response.status == 404) {\n                                            _this2.props.history.push(\"/\");\n                                          } else {\n                                            //   Toast.show(error.message)\n                                            if (error.message == 'Token is not valid') {\n                                              _this2.props.history.push(\"/\");\n                                            }\n                                          }\n\n                                          console.log(error);\n                                        });\n\n                                      case 5:\n                                      case \"end\":\n                                        return _context.stop();\n                                    }\n                                  }\n                                }, _callee);\n                              }));\n\n                              return function (_x2) {\n                                return _ref2.apply(this, arguments);\n                              };\n                            }())[\"catch\"](function (error) {\n                              //    this.setState({regLoader: false})\n                              if (error.code == 'ECONNABORTED') {//     Toast.show('Connection TImeout')\n                              } else if (error.response.status == 404) {\n                                _this2.props.history.push(\"/\");\n                              } else {\n                                //   Toast.show(error.message)\n                                if (error.message == 'Token is not valid') {\n                                  _this2.props.history.push(\"/\");\n                                }\n                              }\n\n                              console.log(error);\n                            });\n\n                          case 3:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }())[\"catch\"](function (error) {\n                  _this2.setState({\n                    regLoader: false\n                  });\n\n                  if (error.code == 'ECONNABORTED') {//     Toast.show('Connection TImeout')\n                  } else {\n                    //   Toast.show(error.message)\n                    if (error.message == 'Token is not valid') {\n                      _this2.props.history.push(\"/\");\n                    }\n                  }\n\n                  console.log(error);\n                });\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getApiData() {\n        return _getApiData.apply(this, arguments);\n      }\n\n      return getApiData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"main-box\"\n      }, __jsx(\"p\", {\n        className: \"welcome-header\"\n      }, \"Hey \", this.state.first_name && this.state.first_name), __jsx(\"p\", {\n        className: \"date-text\"\n      }, moment().format(\"dddd, MMMM Do YYYY\")), __jsx(\"div\", {\n        className: \"content-box\"\n      }, __jsx(\"div\", {\n        className: \"first-content-div\"\n      }, __jsx(\"div\", {\n        className: \"card-holder\"\n      }, __jsx(\"div\", {\n        className: \"card-div\"\n      }, __jsx(\"p\", {\n        className: \"total-text\"\n      }, \"TOTAL BOOKING\"), __jsx(\"p\", {\n        className: \"total-value\"\n      }, this.state.bookings.length)), __jsx(\"div\", {\n        className: \"card-div\"\n      }, __jsx(\"p\", {\n        className: \"total-text\"\n      }, \"TOTAL USERS\"), __jsx(\"p\", {\n        className: \"total-value\"\n      }, this.state.users.length))), __jsx(\"p\", {\n        className: \"daily-text\"\n      }, \"Daily Booking Analysis\"), __jsx(\"canvas\", {\n        id: \"myChart\",\n        ref: this.chartRef\n      })), __jsx(\"div\", {\n        className: \"first-content-div\"\n      }, __jsx(Calendar, null), __jsx(\"p\", {\n        className: \"daily-text\"\n      }, \"Booking Count\"), __jsx(\"div\", {\n        className: \"order-count-div\"\n      }, __jsx(\"p\", {\n        className: \"total-count-text\"\n      }, \"This year: \", this.state.bookings.length), __jsx(\"p\", {\n        className: \"total-count-text\"\n      }, \"This month: **\")))));\n    }\n  }]);\n\n  return Admin;\n}(Component);\n\nexport default Admin;","map":null,"metadata":{},"sourceType":"module"}