{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\"; // import \"./styles/login.css\";\n\nimport Cookies from \"js-cookie\";\nimport { API_URL } from \"../../root.js\"; ///import { askForPermissioToReceiveNotifications } from '../../push-notification';\n\nimport axios from \"axios\"; //axios.defaults.withCredentials = true;\n\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      apiResponse: \"\",\n      email: \"\",\n      password: \"\",\n      error: \"\",\n      error_div: false,\n      fcmToken: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"log\",\n    value: function () {\n      var _log = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var _this$props$location$, state, prevLocation, regg, bodyParameters;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                //    console.log(\"djdjd\")\n                _this$props$location$ = this.props.location.state, state = _this$props$location$ === void 0 ? {} : _this$props$location$;\n                prevLocation = state.prevLocation;\n                regg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n                if (regg.test(this.state.email) === false) {\n                  this.setState({\n                    error: \"Incorrect Credentials\",\n                    error_div: true\n                  });\n                } else if (this.state.password.length < 1 || this.state.email.length < 1) {\n                  this.setState({\n                    error: \"Please fill all required fields\",\n                    error_div: true\n                  });\n                } else {\n                  this.setState({\n                    error_div: false\n                  }); //  let token = await askForPermissioToReceiveNotifications();\n                  //    console.log(token)\n                  //   this.setState({fcmToken: token})\n\n                  bodyParameters = {\n                    email: this.state.email,\n                    password: this.state.password //    device_token: token\n\n                  };\n                  axios.post(API_URL + \"login_admin\", bodyParameters, {\n                    timeout: 20000\n                  }).then( /*#__PURE__*/function () {\n                    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response) {\n                      var id, token, role;\n                      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                        while (1) {\n                          switch (_context2.prev = _context2.next) {\n                            case 0:\n                              console.log(response);\n                              id = response.data.data._id;\n                              token = response.data.token;\n                              role = response.data.role;\n                              _context2.next = 6;\n                              return Cookies.set(\"token\", token, {\n                                expires: 14\n                              });\n\n                            case 6:\n                              Cookies.set(\"id\", id, {\n                                expires: 14\n                              });\n                              Cookies.set(\"role\", role, {\n                                expires: 14\n                              }); // this.props.setToken(token);\n                              // this.props.setId(id);\n                              //      Toast.show('Sign in successful');\n\n                              _this2.props.setLog();\n\n                              _this2.props.history.push(\"/dashboard\");\n\n                            case 10:\n                            case \"end\":\n                              return _context2.stop();\n                          }\n                        }\n                      }, _callee2);\n                    }));\n\n                    return function (_x) {\n                      return _ref.apply(this, arguments);\n                    };\n                  }())[\"catch\"](function (error) {\n                    console.log(error); //       Toast.show(JSON.stringify(error.message),)\n\n                    _this2.setState({\n                      error: error.message,\n                      error_div: true\n                    }); //             this.setState({ regLoader: false });\n\n\n                    if (error.response) {\n                      _this2.setState({\n                        error: JSON.stringify(error.response.message),\n                        error_div: true\n                      });\n\n                      console.log(JSON.stringify(error));\n                    }\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function log() {\n        return _log.apply(this, arguments);\n      }\n\n      return log;\n    }() // callAPI() {\n    //     fetch(\"http://localhost:9000/testAPI\")\n    //         .then(res => res.text())\n    //         .then(res => this.setState({ apiResponse: res }))\n    //         .catch(err => err);\n    // }\n    // componentDidMount() {\n    //     this.callAPI();\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", {\n        className: \"middle-box\"\n      }, __jsx(\"p\", {\n        className: \"login-text\"\n      }, \"Log In\"), __jsx(\"p\", {\n        className: \"sub-text\"\n      }, \"Welcome! Fill details below to login\"), this.state.error_div && __jsx(\"div\", {\n        className: \"error\"\n      }, this.state.error), __jsx(\"div\", {\n        className: \"form-box\"\n      }, __jsx(\"p\", {\n        className: \"label-text\"\n      }, \"Email\"), __jsx(\"input\", {\n        type: \"email\",\n        value: this.state.email,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            email: event.target.value\n          });\n        }\n      }), __jsx(\"p\", {\n        className: \"label-text\"\n      }, \"Password\"), __jsx(\"input\", {\n        type: \"password\",\n        value: this.state.password,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            password: event.target.value\n          });\n        }\n      })), __jsx(\"button\", {\n        className: \"button\",\n        onClick: this.log.bind(this)\n      }, \"Sign in\"));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}