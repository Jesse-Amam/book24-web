{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\"; // import \"./styles/login.css\";\n\nimport Cookies from \"js-cookie\";\nimport { API_URL } from \"../../root.js\"; ///import { askForPermissioToReceiveNotifications } from '../../push-notification';\n\nimport axios from \"axios\"; //axios.defaults.withCredentials = true;\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: \"\",\n      email: \"\",\n      password: \"\",\n      error: \"\",\n      error_div: false,\n      fcmToken: ''\n    };\n  }\n\n  async componentDidMount() {}\n\n  async log() {\n    //    console.log(\"djdjd\")\n    const {\n      state = {}\n    } = this.props.location;\n    const {\n      prevLocation\n    } = state;\n    let regg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (regg.test(this.state.email) === false) {\n      this.setState({\n        error: \"Incorrect Credentials\",\n        error_div: true\n      });\n    } else if (this.state.password.length < 1 || this.state.email.length < 1) {\n      this.setState({\n        error: \"Please fill all required fields\",\n        error_div: true\n      });\n    } else {\n      this.setState({\n        error_div: false\n      }); //  let token = await askForPermissioToReceiveNotifications();\n      //    console.log(token)\n      //   this.setState({fcmToken: token})\n\n      var bodyParameters = {\n        email: this.state.email,\n        password: this.state.password //    device_token: token\n\n      };\n      axios.post(API_URL + \"login_admin\", bodyParameters, {\n        timeout: 20000\n      }).then(async response => {\n        console.log(response);\n        let id = response.data.data._id;\n        let token = response.data.token;\n        let role = response.data.role;\n        await Cookies.set(\"token\", token, {\n          expires: 14\n        });\n        Cookies.set(\"id\", id, {\n          expires: 14\n        });\n        Cookies.set(\"role\", role, {\n          expires: 14\n        }); // this.props.setToken(token);\n        // this.props.setId(id);\n        //      Toast.show('Sign in successful');\n\n        this.props.setLog();\n        this.props.history.push(\"/dashboard\");\n      }).catch(error => {\n        console.log(error); //       Toast.show(JSON.stringify(error.message),)\n\n        this.setState({\n          error: error.message,\n          error_div: true\n        }); //             this.setState({ regLoader: false });\n\n        if (error.response) {\n          this.setState({\n            error: JSON.stringify(error.response.message),\n            error_div: true\n          });\n          console.log(JSON.stringify(error));\n        }\n      });\n    }\n  } // callAPI() {\n  //     fetch(\"http://localhost:9000/testAPI\")\n  //         .then(res => res.text())\n  //         .then(res => this.setState({ apiResponse: res }))\n  //         .catch(err => err);\n  // }\n  // componentDidMount() {\n  //     this.callAPI();\n  // }\n\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"middle-box\"\n    }, __jsx(\"p\", {\n      className: \"login-text\"\n    }, \"Log In\"), __jsx(\"p\", {\n      className: \"sub-text\"\n    }, \"Welcome! Fill details below to login\"), this.state.error_div && __jsx(\"div\", {\n      className: \"error\"\n    }, this.state.error), __jsx(\"div\", {\n      className: \"form-box\"\n    }, __jsx(\"p\", {\n      className: \"label-text\"\n    }, \"Email\"), __jsx(\"input\", {\n      type: \"email\",\n      value: this.state.email,\n      onChange: event => this.setState({\n        email: event.target.value\n      })\n    }), __jsx(\"p\", {\n      className: \"label-text\"\n    }, \"Password\"), __jsx(\"input\", {\n      type: \"password\",\n      value: this.state.password,\n      onChange: event => this.setState({\n        password: event.target.value\n      })\n    })), __jsx(\"button\", {\n      className: \"button\",\n      onClick: this.log.bind(this)\n    }, \"Sign in\"));\n  }\n\n}\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}